{"version":3,"file":"static/js/325.99e0142a.chunk.js","mappings":"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","sources":["../node_modules/@heroicons/react/outline/esm/LockClosedIcon.js","pages/login/index.jsx"],"sourcesContent":["import * as React from \"react\";\n\nfunction LockClosedIcon(props, svgRef) {\n  return /*#__PURE__*/React.createElement(\"svg\", Object.assign({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    fill: \"none\",\n    viewBox: \"0 0 24 24\",\n    strokeWidth: 2,\n    stroke: \"currentColor\",\n    \"aria-hidden\": \"true\",\n    ref: svgRef\n  }, props), /*#__PURE__*/React.createElement(\"path\", {\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    d: \"M12 15v2m-6 4h12a2 2 0 002-2v-6a2 2 0 00-2-2H6a2 2 0 00-2 2v6a2 2 0 002 2zm10-10V7a4 4 0 00-8 0v4h8z\"\n  }));\n}\n\nconst ForwardRef = React.forwardRef(LockClosedIcon);\nexport default ForwardRef;","import { LockClosedIcon } from '@heroicons/react/outline'\nimport React, { useState } from 'react'\nimport { ToastContainer, toast } from 'react-toastify'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { useNavigate } from 'react-router-dom'\nimport axios from 'axios'\nimport { setDummyUser } from '../../store/auth'\nimport 'react-toastify/dist/ReactToastify.css'\n\nfunction Login() {\n  // const user = useSelector((state) => state.auth.user)\n  const dummy = useSelector((state) => state.auth.dummy)\n  const authMode = useSelector((state) => state.auth.authMode)\n  const [form, setForm] = useState({\n    email: 'user',\n    password: 'user',\n  })\n  const dispatch = useDispatch()\n  const routerNavigate = useNavigate()\n\n  const login = {\n    email: 'user',\n    password: 'user',\n  }\n\n  function handleChange(e) {\n    const { name, value } = e.target\n    setForm((values) => ({ ...values, [name]: value }))\n  }\n\n  function handleSubmit(e) {\n    e.preventDefault()\n    if (!dummy) {\n      if (authMode === 'sanctum') {\n        axios.get(`${axios.defaults.baseURL}/sanctum/csrf-cookie`).then(() => {\n          axios.post(`${axios.defaults.baseURL}/login`, {\n            username: form.email,\n            password: form.password,\n          }).then((res) => {\n            if (res.data.status) {\n              window.location = ''\n              setTimeout(() => {\n                routerNavigate('/')\n              }, 1000)\n            } else {\n              toast.error(res.data.message, {\n                hideProgressBar: true,\n              })\n            }\n          }).catch(() => {\n            toast.error('An error occured', {\n              hideProgressBar: true,\n            })\n          })\n        })\n          .catch(() => {\n            toast.error('An error occured', {\n              hideProgressBar: true,\n            })\n          })\n      } else if (authMode === 'api') {\n        axios.post(`${axios.defaults.baseURL}/api/login`, {\n          username: form.email,\n          password: form.password,\n        }).then((res) => {\n          if (res.data.status) {\n            localStorage.setItem('token', `${res.data.data.token}j`)\n            // window.location = ''\n            setTimeout(() => {\n              routerNavigate('/')\n            }, 1000)\n          } else {\n            toast.error(res.data.message, {\n              hideProgressBar: true,\n            })\n          }\n        }).catch(() => {\n          toast.error('An error occured', {\n            hideProgressBar: true,\n          })\n        })\n      }\n    } else {\n      // eslint-disable-next-line no-lonely-if\n      if (form.email === login.email && form.password === login.password) {\n        dispatch(setDummyUser())\n        routerNavigate('/')\n      } else {\n        toast.error('Incorrect username or password', {\n          hideProgressBar: true,\n        })\n      }\n    }\n  }\n  return (\n    <div className=\"min-h-screen dark:bg-gray-900\">\n      <div\n        className=\"\n          min-h-full\n          flex\n          items-center\n          justify-center\n          py-12\n          px-4\n          sm:px-6\n          lg:px-8\n        \"\n      >\n        <div className=\"max-w-md w-full space-y-8\">\n          <div>\n            <img\n              className=\"mx-auto h-12 w-auto\"\n              src=\"https://api.jhonarendra.com/ramp/icon/kemenhub.png\"\n              alt=\"ramp\"\n            />\n            <h2 className=\"mt-6 text-center text-3xl font-extrabold text-gray-900 dark:text-gray-300\">\n              Login\n            </h2>\n          </div>\n          <form\n            className=\"mt-8 space-y-6\"\n            onSubmit={handleSubmit}\n          >\n            <div className=\"rounded-md shadow-sm -space-y-px\">\n              <div>\n                <label htmlFor=\"email-address\" className=\"sr-only\">Email/username</label>\n                <input\n                  id=\"email-address\"\n                  name=\"email\"\n                  value={form.email || ''}\n                  onChange={handleChange}\n                  type=\"text\"\n                  autoComplete=\"email\"\n                  required\n                  className=\"\n                    appearance-none\n                    rounded-none\n                    relative\n                    block\n                    w-full\n                    px-3\n                    py-2\n                    border border-gray-300\n                    placeholder-gray-500\n                    text-gray-900\n                    rounded-t-md\n                    focus:outline-none\n                    focus:ring-indigo-500\n                    focus:border-indigo-500\n                    focus:z-10\n                    sm:text-sm\n                    dark:bg-gray-800\n                    dark:text-gray-300\n                    dark:border-gray-700\n                  \"\n                  placeholder=\"Email/username\"\n                />\n              </div>\n              <div className=\"relative\">\n                <label htmlFor=\"password\" className=\"sr-only\">Password</label>\n                <input\n                  id=\"password\"\n                  name=\"password\"\n                  type=\"password\"\n                  value={form.password || ''}\n                  onChange={handleChange}\n                  autoComplete=\"current-password\"\n                  required\n                  className=\"\n                    appearance-none\n                    rounded-none\n                    relative\n                    block\n                    w-full\n                    px-3\n                    py-2\n                    border border-gray-300\n                    placeholder-gray-500\n                    text-gray-900\n                    rounded-b-md\n                    focus:outline-none\n                    focus:ring-indigo-500\n                    focus:border-indigo-500\n                    focus:z-10\n                    sm:text-sm\n                    dark:bg-gray-800\n                    dark:text-gray-300\n                    dark:border-gray-700\n                  \"\n                  placeholder=\"Password\"\n                />\n              </div>\n            </div>\n            <div>\n              <button\n                type=\"submit\"\n                className=\"\n                  group\n                  relative\n                  w-full\n                  flex\n                  justify-center\n                  py-2\n                  px-4\n                  border border-transparent\n                  text-sm\n                  font-medium\n                  rounded-md\n                  text-white\n                  focus:outline-none\n                  focus:ring-2\n                  focus:ring-offset-2\n                  focus:ring-indigo-500\n                  bg-indigo-600 hover:bg-indigo-700\n                \"\n              >\n                <span className=\"absolute left-0 inset-y-0 flex items-center pl-3\">\n                  <LockClosedIcon\n                    className=\"text-indigo-500 group-hover:text-indigo-400 w-5 h-5\"\n                  />\n                </span>\n                Login\n              </button>\n            </div>\n          </form>\n        </div>\n      </div>\n      <ToastContainer />\n    </div>\n  )\n}\n\nexport default Login\n"],"names":["React","props","svgRef","Object","assign","xmlns","fill","viewBox","strokeWidth","stroke","ref","strokeLinecap","strokeLinejoin","d","dummy","useSelector","state","auth","authMode","useState","email","password","form","setForm","dispatch","useDispatch","routerNavigate","useNavigate","login","handleChange","e","target","name","value","values","className","src","alt","onSubmit","preventDefault","setDummyUser","toast","hideProgressBar","axios","then","username","res","data","status","window","location","setTimeout","message","catch","localStorage","setItem","token","htmlFor","id","onChange","type","autoComplete","required","placeholder"],"sourceRoot":""}